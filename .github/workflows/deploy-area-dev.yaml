name: Deploy AREA Dev

on:
  push:
    branches:
      - dev
      - workflow-to-deploy-server-&-db-on-outside-server

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_PRIVATE_KEY_DEV_SERVER }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ vars.DEV_SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Prepare environment files
        run: |
          echo "${{ secrets.ROOT_ENV }}" > rootenv
          echo "${{ secrets.SERVER_ENV }}" > serverenv

      - name: Upload deployment files (files + deploy script + .envs)
        run: |
          # Create folder on server if not exists
          ssh ${{ vars.DEV_SERVER_USER }}@${{ vars.DEV_SERVER_IP }} "mkdir -p /var/www/area-dev/"

          # Upload server files
          scp -r server/ ${{ vars.DEV_SERVER_USER }}@${{ vars.DEV_SERVER_IP }}:/var/www/area-dev/server/

          # Upload .env files
          scp rootenv ${{ vars.DEV_SERVER_USER }}@${{ vars.DEV_SERVER_IP }}:/var/www/area-dev/.env
          scp serverenv ${{ vars.DEV_SERVER_USER }}@${{ vars.DEV_SERVER_IP }}:/var/www/area-dev/server/.env

          # Upload other necessary files
          scp docker-compose.yml ${{ vars.DEV_SERVER_USER }}@${{ vars.DEV_SERVER_IP }}:/var/www/area-dev/docker-compose.yml
          scp area.sql ${{ vars.DEV_SERVER_USER }}@${{ vars.DEV_SERVER_IP }}:/var/www/area-dev/area.sql
